/////Routing/////
  //Routing in React app
  >Install a third party package
  >Routes.js file to configure the routes
  >For each route,create a component file,
  export the component,import it in routes.js and
  configure the new route with a path property

  //Routing in a Next.js app
  >File-system based routing mechanism
  >When a file is added to the pages folder in a project,
  it automatically becomes available as a routes
  >By mixing and matching file names with a nested folder structure,
  it is possible to pretty much define the most common routing patterns

  //Routing in a Next.js app
  >Routing with Pages
  >Nested routes
  >Dynamic routes
  >Catch-all routes
  >Navigate from the UI
  >Programmatically navigate b/w Pages

  //Routing Summary
  1.Page based routing mechanism - Pages are associated with a route
                                   based on their file names

   2.Nested routes - Nested folder structure,file will be automatically routed 
                     in the same way in the URL

   3.Dynamic routes - Can be created by adding square brackets to a page name

   4.Catch all routes - Add three dots inside square brackets 
                        to create a catch all route.
                        Helpful when you want different URLs for the same Page Layout or 
                        even when you're working with pages where some of the 
                        route parameters are optional
   5.Link component to navigate on click of an element
   6.useRouter hook's router.push method to navigate Programmatically   
   7.How to create a custom 404 page
